// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc364.Robot2016.subsystems;

import org.usfirst.frc364.Robot2016.RobotMap;
import org.usfirst.frc364.Robot2016.commands.*;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;

public class hangSystem extends Subsystem {

	public SpeedController wenchMotor = RobotMap.hangSystemwenchMotor;
	public static AnalogInput wenchPot = RobotMap.hangSystemwenchPot;
	
	public hangSystem() {
		/*
		super("hangSystem", 1.0, 0.0, 0.0);
		enable();
		setAbsoluteTolerance(0);
		getPIDController().setContinuous(false);
		getPIDController().setOutputRange(-1, 1);
		setSetpoint(1);
		*/
	}
/*	
	public void extendHangBars() {
		setSetpoint(1);
	}
	
	public void hangFromCastle() {
		setSetpoint(1);
	}
*/
	public void manualWench(double power) {
		// setSetpoint(power + wenchPot.getVoltage());
		wenchMotor.set(power);
	}
	
    public void initDefaultCommand() {
    	setDefaultCommand(new hangCommand());
    }
/*
	protected double returnPIDInput() {
		// TODO Auto-generated method stub
		return wenchPot.getAverageVoltage();
	}

	protected void usePIDOutput(double output) {
		wenchMotor.set(output);
	}
	*/
}

